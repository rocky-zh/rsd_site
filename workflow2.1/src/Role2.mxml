<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="900" height="500" showCloseButton="false" 
				close="closeHandler(event)" title="选择角色" backgroundColor="#FFFFFF" borderStyle="outset" 
				borderColor="#000000" xmlns:ns1="*" creationComplete="loadData(event)">
	<mx:HTTPService id="rolegroupProvider" url="{ServletConst.ROLEGROUP_SERVLET_URL}" resultFormat="text" 
					result="rolegroup_tree_Provider_resultHandler(event)" showBusyCursor="true" fault="HttpFaultUtil.faultHandler(event)">		
	</mx:HTTPService>
	
	<mx:HTTPService id="roleProvider" url="{ServletConst.ROLE_SERVLET_URL}" resultFormat="text" 
					result="roleProvider_resultHandler(event)" showBusyCursor="true" fault="HttpFaultUtil.faultHandler(event)">		
	</mx:HTTPService>
	
	<mx:Script>
		<![CDATA[
			import context.WfContext;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import exception.HttpFaultUtil;
			import servlet.ServletConst;

			[Bindable]
			protected var selects1:Array = new Array();
			[Bindable]
			protected var selects2:Array = new Array();
			
			protected var selectedRoles:Array = new Array();
			
			[Bindable]
			public var mainApp:Object = null;  
			[Bindable]
			public var callbackFunction:Function;  //回调函数  
			
			protected function closeHandler(event:CloseEvent):void
			{
					PopUpManager.removePopUp(this);   
			}
			protected function rolegroup_tree_Provider_resultHandler(event:ResultEvent):void
			{
				
				var groups:XMLList  = new XMLList(event.result.toString());
				//Alert.show("roles:"+roles);
				rolegroup_tree.dataProvider = groups.Rolegroup;
			}

			protected function roleProvider_resultHandler(event:ResultEvent):void
			{
			    
				var roles:XMLList  = new XMLList(event.result.toString());
				//Alert.show("roles:"+roles);
				rolegrid.dataProvider = roles.Role;
			}

			protected function loadData(event:FlexEvent):void
			{
				rolegroupProvider.url = ServletConst.ROLEGROUP_SERVLET_URL;
				if(WfContext.Pk_group!=null&&WfContext.Pk_group!="")
					rolegroupProvider.url+="?pk_group="+WfContext.Pk_group;
				rolegroupProvider.send();
			}

			protected function submit(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);
				callbackFunction.call(mainApp,selectedRoles);
			}
			

			protected function rolegrouptree_clickHandler(event:MouseEvent):void
			{
				var node:XML = rolegroup_tree.selectedItem as XML;
				if(node==null)return;
				var pk_rolegroup:String = node.@pk_rolegroup;
				roleProvider.url = ServletConst.ROLE_SERVLET_URL;
				if(pk_rolegroup!=null&&pk_rolegroup!=""){
					roleProvider.url +="?pk_rolegroup="+pk_rolegroup;
					roleProvider.send();
				}
			}
			
			//加入人员执行者
			protected function add_btn_clickHandler(event:MouseEvent):void
			{
				for(var i:int=0;i<selects1.length;i++){
					var included:Boolean = false;
					for(var j:int=0;j<selectedRoles.length;j++){
						if(selectedRoles[j]==selects1[i]){
							included = true;
							break;
						}
					}	
					if(included==false)selectedRoles.push(selects1[i]);
				}
				selected_rolegrid.dataProvider = selectedRoles;				
			}
			
			//删除人员执行者
			protected function del_btn_clickHandler(event:MouseEvent):void
			{
				for(var i:int=0;i<selects2.length;i++){
					var k:int = selectedRoles.indexOf(selects2[i]);
					selectedRoles.splice(k,1);
				}
				selected_rolegrid.dataProvider = selectedRoles;	
			}
			//向上移动
			protected function up_btn_clickHandler(event:MouseEvent):void
			{
				var i : int = selected_rolegrid.selectedIndex;
				if(i<0)return;
				if (i >= 1&&selected_rolegrid.selectedItem)       
				{                    
					
					IList(selected_rolegrid.dataProvider).addItemAt(selected_rolegrid.selectedItem,i-1);    
					IList(selected_rolegrid.dataProvider).removeItemAt(i+1);       
					selected_rolegrid.selectedIndex = i;       
				}    
			}
			//向下移动
			protected function down_btn_clickHandler(event:MouseEvent):void
			{
				var i : int = selected_rolegrid.selectedIndex;   
				if(i<0)return;
				if (i < (ArrayCollection(selected_rolegrid.dataProvider).length - 1) && selected_rolegrid.selectedItem)       
				{                    
					IList(selected_rolegrid.dataProvider).addItemAt(selected_rolegrid.selectedItem,i + 2);                         
					IList(selected_rolegrid.dataProvider).removeItemAt(i);          
					selected_rolegrid.selectedIndex = i;             
				}                    
			}

		]]>
	</mx:Script>		
	<mx:Binding source="rolegrid.selectedItems" destination="selects1">		
	</mx:Binding>
	<mx:Binding source="selected_rolegrid.selectedItems" destination="selects2">		
	</mx:Binding>
	<mx:Canvas x="0" y="0" width="100%" height="90%"  borderStyle="solid">
	<mx:HDividedBox y="0" left="0" width="60%" height="100%">
		<mx:Tree y="0" id="rolegroup_tree" width="40%" height="100%" left="0" labelField="@name"  click="rolegrouptree_clickHandler(event)">
		</mx:Tree>
		<mx:DataGrid id="rolegrid" width="60%" height="100%" y="0" right="0" allowMultipleSelection="true">      
			<mx:columns>
				<mx:DataGridColumn dataField="@code" headerText="Code"> 
				</mx:DataGridColumn>      
				<mx:DataGridColumn dataField="@name" headerText="名字">   
				</mx:DataGridColumn>      
				<mx:DataGridColumn dataField="@pk_rolegroup" headerText="角色组" visible="false">    
				</mx:DataGridColumn>      
			</mx:columns>      
		</mx:DataGrid>  
	</mx:HDividedBox>
		<mx:Canvas y="0" right="0" width="40%" height="100%" borderStyle="solid">
			<mx:Canvas x="0" y="0" width="15%" height="100%" borderStyle="solid">
				<mx:Button x="0" y="88" label="&gt;" width="100%" id="add_btn" click="add_btn_clickHandler(event)"/>			
				<mx:Button x="0" y="143" label="&lt;" width="100%" id="del_btn" click="del_btn_clickHandler(event)"/>
				<mx:Button x="0" y="302" label="v" width="100%" id="down_btn" click="down_btn_clickHandler(event)"/>
				<mx:Button x="0" y="246" label="^" width="100%" id="up_btn" click="up_btn_clickHandler(event)"/>
			</mx:Canvas>
			<mx:DataGrid id="selected_rolegrid" width="85%" height="100%" y="0" right="0" allowMultipleSelection="false">      
				<mx:columns>
					<mx:DataGridColumn dataField="@code" headerText="Code"> 
					</mx:DataGridColumn>      
					<mx:DataGridColumn dataField="@name" headerText="名字">   
					</mx:DataGridColumn>      
					<mx:DataGridColumn dataField="@pk_rolegroup" headerText="角色组">    
					</mx:DataGridColumn>      
				</mx:columns>      
			</mx:DataGrid>  
		</mx:Canvas>	
	</mx:Canvas>
	<mx:Canvas width="100%" height="30" bottom="0" x="0" textAlign="center">
		<mx:Button label="取消" x="469" y="4" click="PopUpManager.removePopUp(this); ">		
		</mx:Button>
		<mx:Button label="确定" y="4" x="378" click="submit(event)">		
		</mx:Button>
	</mx:Canvas>

</mx:TitleWindow>
